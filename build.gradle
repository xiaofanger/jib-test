buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public'
        }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:0.9.11"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.cloud.tools.jib'
apply plugin: 'groovy'

group = 'com.fanger'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

buildscript.repositories.each {
    repositories.add(it)
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation('org.projectlombok:lombok')
    // swagger-ui
    implementation('com.spring4all:swagger-spring-boot-starter:1.7.0.RELEASE')
    
    compile('mysql:mysql-connector-java:5.1.35')
    compile('com.alibaba:druid-spring-boot-starter:1.1.10')
    compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.7')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')

    compile('org.codehaus.groovy:groovy-all:2.4.15')

    /**
     * 自定义注解处理器注册
     */
    compile 'com.google.auto.service:auto-service:1.0-rc2'

    // Spring Boot Admin
//    compile('de.codecentric:spring-boot-admin-starter-server:2.0.1')
//    compile('de.codecentric:spring-boot-admin-starter-client:2.0.1')
    //    implementation('org.springframework.boot:spring-boot-starter-actuator')

}

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
sourceSets.main.java.srcDirs=[];
sourceSets.main.groovy.srcDirs=['src/main/java','src/main/groovy'];

// docker
jib {
    from {
        image = 'registry.hub.docker.com/openjdk:8-jdk-alpine'
        auth {
            username = 'lifanzuishuai'
            password = 'lifan00000000'
        }
    }
    to {
        image = 'registry.cn-beijing.aliyuncs.com/xiaofanger/javatest:1.4'
        auth {
            username = 'shiruaiai521'
            password = 'lifan00000000'
        }
    }
    container {
        mainClass = 'com.fanger.jib.LibApplication'
        ports = ['8080']
    }
}
